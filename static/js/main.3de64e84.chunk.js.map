{"version":3,"sources":["components/FormUserDetails.js","components/FormPersonalDetails.js","components/Confirm.js","components/Success.js","components/UserForm.js","App.js","serviceWorker.js","index.js"],"names":["FormUserDetails","continue","e","preventDefault","props","nextStep","this","values","handleChange","title","hintText","floatingLableText","onChange","defaultValue","firstName","lastName","email","label","primary","onClick","Component","UserPersonalDetails","back","prevStep","occupation","city","bio","style","backButtonStyle","marginLeft","Confirm","primaryText","secondaryText","Success","UserForm","state","step","setState","input","target","value","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3de64e84.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport TextField from 'material-ui/TextField';\n\nimport { RaisedButton } from 'material-ui';\n\nexport class FormUserDetails extends Component {\n  continue = (e) => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n  render() {\n    const { values, handleChange } = this.props;\n    return (\n      <MuiThemeProvider>\n        <>\n          <AppBar title=\"Enter User Details\" />\n          <TextField\n            hintText=\"Enter Your First name\"\n            floatingLableText=\"First Name\"\n            onChange={handleChange('firstName')}\n            defaultValue={values.firstName}\n          />\n          <br />\n          <TextField\n            hintText=\"Enter Your Last name\"\n            floatingLableText=\"Last Name\"\n            onChange={handleChange('lastName')}\n            defaultValue={values.lastName}\n          />\n          <br />\n          <TextField\n            hintText=\"Enter Your Email\"\n            floatingLableText=\"First Name\"\n            onChange={handleChange('email')}\n            defaultValue={values.email}\n          />\n          <br />\n          <RaisedButton\n            label=\"Continue\"\n            primary={true}\n            onClick={this.continue}\n          />\n        </>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default FormUserDetails;\n","import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport TextField from 'material-ui/TextField';\n\nimport { RaisedButton } from 'material-ui';\n\nexport class UserPersonalDetails extends Component {\n  continue = (e) => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n  ///back button\n  back = (e) => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n  render() {\n    const { values, handleChange } = this.props;\n    return (\n      <MuiThemeProvider>\n        <>\n          <AppBar title=\"Enter Your Personal Details\" />\n          <TextField\n            hintText=\"Enter Your Occupation\"\n            floatingLableText=\"Your Occupation\"\n            onChange={handleChange('occupation')}\n            defaultValue={values.occupation}\n          />\n          <br />\n          <TextField\n            hintText=\"Enter Your city\"\n            floatingLableText=\"Last Name\"\n            onChange={handleChange('city')}\n            defaultValue={values.city}\n          />\n          <br />\n          <TextField\n            hintText=\"Enter Your bio\"\n            floatingLableText=\"Bio \"\n            onChange={handleChange('bio')}\n            defaultValue={values.bio}\n          />\n          <br />\n          <RaisedButton\n            label=\"Continue\"\n            primary={true}\n            onClick={this.continue}\n          />\n          <RaisedButton\n            label=\"Back\"\n            primary={false}\n            onClick={this.back}\n            style={backButtonStyle}\n          />\n        </>\n      </MuiThemeProvider>\n    );\n  }\n}\nconst backButtonStyle = {\n  marginLeft: '5px',\n};\nexport default UserPersonalDetails;\n","import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\n\nimport { ListItem, RaisedButton, List } from 'material-ui';\n\nclass Confirm extends Component {\n  continue = (e) => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n  ///back button\n  back = (e) => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n  render() {\n    const {\n      values: { firstName, lastName, email, occupation, city, bio },\n    } = this.props;\n    return (\n      <MuiThemeProvider>\n        <>\n          <AppBar title=\"Confirm Information\" />\n\n          <List>\n            <ListItem\n              primaryText=\"Name\"\n              secondaryText={firstName + ' ' + lastName}\n            />\n            <ListItem primaryText=\"Email\" secondaryText={email} />\n            <ListItem primaryText=\"Occupation\" secondaryText={occupation} />\n            <ListItem primaryText=\"City\" secondaryText={city} />\n            <ListItem primaryText=\"Bio\" secondaryText={bio} />\n          </List>\n\n          <RaisedButton\n            label=\"Confirm & Continue\"\n            primary={true}\n            onClick={this.continue}\n          />\n          <RaisedButton\n            label=\"Back\"\n            primary={false}\n            onClick={this.back}\n            style={backButtonStyle}\n          />\n        </>\n      </MuiThemeProvider>\n    );\n  }\n}\nconst backButtonStyle = {\n  marginLeft: '5px',\n};\nexport default Confirm;\n","import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\n\nclass Success extends Component {\n  render() {\n    return (\n      <MuiThemeProvider>\n        <AppBar title=\"Success\" />\n        <h1>Successfully submitted</h1>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default Success;\n","import React, { Component } from 'react';\nimport FormUserDetails from './FormUserDetails';\nimport UserPersonalDetails from './FormPersonalDetails';\nimport Confirm from './Confirm';\nimport Success from './Success';\n\nexport class UserForm extends Component {\n  state = {\n    step: 1,\n    firstName: '',\n    lastName: '',\n    email: '',\n    occupation: '',\n    city: '',\n    bio: '',\n  };\n  //procced to next step\n  nextStep = () => {\n    const { step } = this.state;\n    this.setState({ step: step + 1 });\n  };\n  //procced to prev step\n  prevStep = () => {\n    const { step } = this.state;\n    this.setState({ step: step - 1 });\n  };\n  ///handleField Change\n\n  handleChange = (input) => (e) => {\n    this.setState({ [input]: e.target.value });\n  };\n\n  render() {\n    const { step } = this.state;\n    const { firstName, lastName, email, occupation, city, bio } = this.state;\n    const values = { firstName, lastName, email, occupation, city, bio };\n\n    switch (step) {\n      case 1:\n        return (\n          <FormUserDetails\n            nextStep={this.nextStep}\n            handleChange={this.handleChange}\n            values={values}\n          />\n        );\n\n      case 2:\n        return (\n          <UserPersonalDetails\n            prevStep={this.prevStep}\n            nextStep={this.nextStep}\n            handleChange={this.handleChange}\n            values={values}\n          />\n        );\n      case 3:\n        return (\n          <Confirm\n            prevStep={this.prevStep}\n            nextStep={this.nextStep}\n            values={values}\n          />\n        );\n      case 4:\n        return <Success />;\n    }\n  }\n}\n\nexport default UserForm;\n","import React from 'react';\nimport UserForm from './components/UserForm';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UserForm />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}